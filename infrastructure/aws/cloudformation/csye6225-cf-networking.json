{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Cloud Formation to build VPC",
    "Parameters":{
        "VPCSubnetCidrBlock":{
            "Description":"10.0.0.0/16 = 10.0.0.0-10.0.255.255 = 256 Subnets = 65534 hosts",
            "Type":"String",
            "Default":"10.0.0.0/16",
            "MinLength":"10",
            "MaxLength":"18",
            "AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
            
        },

        "AvailabilityZone1":{
            "Type":"String",
            "Default":"a",
            "AllowedValues": ["a","b","c"]

        },

        "AvailabilityZone2":{
            "Type":"String",
            "Default":"b",
            "AllowedValues": ["a","b","c"]

        },

        "AvailabilityZone3":{
            "Type":"String",
            "Default":"c",
            "AllowedValues":["a","b","c"]

        },

        "PrivateSubnetCidrBlock1":{
            "Type":"String",
            "Default":"10.0.1.0/24",
            "MinLength":"10",
            "MaxLength":"18",
            "AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
            
        },

        "PrivateSubnetCidrBlock2":{
            "Type":"String",
            "Default":"10.0.2.0/24",
            "MinLength":"10",
            "MaxLength":"18",
            "AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
            
        },
        "PrivateSubnetCidrBlock3":{
            "Type":"String",
            "Default":"10.0.3.0/24",
            "MinLength":"10",
            "MaxLength":"18",
            "AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
            
        },


        "PublicSubnetCidrBlock1":{
            "Type":"String",
            "Default":"10.0.4.0/24",
            "MinLength":"10",
            "MaxLength":"18",
            "AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
            
        },

        "PublicSubnetCidrBlock2":{
            "Type":"String",
            
            "Default":"10.0.5.0/24",
            "MinLength":"10",
            "MaxLength":"18",
            "AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
            
        },

        "PublicSubnetCidrBlock3":{
            "Type":"String",
            "Default":"10.0.6.0/24",
            "MinLength":"10",
            "MaxLength":"18",
            "AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
            
        },
        "RouteIpaddress":{
            "Type":"String",
            "Default":"0.0.0.0/0",
            "AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"

        },

        "SSHLocation": {
            "Description": " The IP address range that can be used to access the web server using SSH.",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
          },

        "StackName":{
            "Type":"String"

        }
    },
    
    "Resources":{
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "EnableDnsSupport":"true",
                "EnableDnsHostnames":"true",
                "CidrBlock": {"Ref":"VPCSubnetCidrBlock"},
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "", [
                                {"Ref": "StackName"},
                                "-csye6225-vpc"
                                ]
                            ]
                            
                        }

                    }
                ]
            }
        },
    
    "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn":"VPC",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                
                "AvailabilityZone": {
                    "Fn::Join": [
                      "", [
                        {"Ref": "AWS::Region"},
                        {"Ref":"AvailabilityZone1"}
                      ]
                    ]
                  },
                  
                "CidrBlock": {"Ref":"PrivateSubnetCidrBlock1"},
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "", [
                                {"Ref": "StackName"},
                                "-private-az1"
                                ]
                            ]
                        }
                    }
                
                ]
            }
        },
    
    "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn":"VPC",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Join": [
                      "", [
                        {"Ref": "AWS::Region"},
                        {"Ref":"AvailabilityZone2"}
                      ]
                    ]
                  },
                "CidrBlock": {"Ref":"PrivateSubnetCidrBlock2"},
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "", [
                                {"Ref": "StackName"},
                                "-private-az2"
                                ]
                            ]
                        }
                    }

                    
                ]
            }
        },
    
    "PrivateSubnet3": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn":"VPC",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Join": [
                      "", [
                        {"Ref": "AWS::Region"},
                        {"Ref":"AvailabilityZone3"}
                      ]
                    ]
                  },
                "CidrBlock": {"Ref":"PrivateSubnetCidrBlock3"},
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "", [
                                {"Ref": "StackName"},
                                "-private-az3"
                                ]
                            ]
                        }
                    }

                ]
            }
        },
        
    "PublicSubnet1": {
        "Type": "AWS::EC2::Subnet",
        "DependsOn":"VPC",
        "Properties": {
            "VpcId": {
                "Ref": "VPC"
            },
            "MapPublicIpOnLaunch":"true",
            "AvailabilityZone": {
                "Fn::Join": [
                    "", [
                    {"Ref": "AWS::Region"},
                    {"Ref":"AvailabilityZone1"}
                    ]
                ]
                },
            "CidrBlock": {"Ref":"PublicSubnetCidrBlock1"},
            "Tags": [
                {
                    "Key": "Name",
                    "Value": {
                        "Fn::Join": [
                            "", [
                            {"Ref": "StackName"},
                            "-public-az1"
                            ]
                        ]
                    }
                }

            ]
        }
    },
        
    "PublicSubnet2": {
        "Type": "AWS::EC2::Subnet",
        "DependsOn":"VPC",
        "Properties": {
            "VpcId": {
                "Ref": "VPC"
            },
            "MapPublicIpOnLaunch":"true",
            "AvailabilityZone": {
                "Fn::Join": [
                    "", [
                    {"Ref": "AWS::Region"},
                    {"Ref":"AvailabilityZone2"}
                    ]
                ]
                },
            "CidrBlock": {"Ref":"PublicSubnetCidrBlock2"},
            "Tags": [
                {
                    "Key": "Name",
                    "Value": {

                        "Fn::Join": [
                            "", [
                            {"Ref": "StackName"},
                            "-public-az2"
                            ]
                        ]
                    }
                }
            ]
        }
    },
        
    "PublicSubnet3": {
        "Type": "AWS::EC2::Subnet",
        "DependsOn":"VPC",
        "Properties": {
            "VpcId": {
                "Ref": "VPC"
            },
            "MapPublicIpOnLaunch":"true",
            "AvailabilityZone": {
                "Fn::Join": [
                    "", [
                    {"Ref": "AWS::Region"},
                    {"Ref":"AvailabilityZone3"}
                    ]
                ]
                },
            "CidrBlock":{"Ref":"PublicSubnetCidrBlock3"},
            "Tags": [
                {
                    "Key": "Name",
                    "Value": {

                        "Fn::Join": [
                            "", [
                            {"Ref": "StackName"},
                            "-public-az3"
                            ]
                        ]
                        
                    }
                }
            ]
        }
    },
        
    "DBsubnetGroup":{
        "Type" : "AWS::RDS::DBSubnetGroup",
        "Properties" : {
           "DBSubnetGroupDescription" : "DB SUbnet group for RDS instance",
           "DBSubnetGroupName" : "RDSSubnetGroup",
           "SubnetIds" : [ {"Ref": "PrivateSubnet1" },
            {"Ref": "PrivateSubnet2" }]
           
        }
     },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {

                            "Fn::Join": [
                                "", [
                                {"Ref": "StackName"},
                                "-public-IG"
                                ]
                            ]
                            
                        }
                    }
                ]
            }
        },

        "WebServerSecurityGroup":{
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties":{
                "GroupDescription" : "Allow access from HTTP and SSH traffic",
                "GroupName": "csye6225-webapp",
                "VpcId": {
                    "Ref": "VPC"
                  },
                  "Tags": [
                    {
                        "Key": "Name",
                        "Value": "csye6225-webapp"
    
                    }
                ],
                "SecurityGroupIngress": [
                {
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "0.0.0.0/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIpv6": "::/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIp": "0.0.0.0/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIpv6": "::/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "5050",
                    "ToPort": "5050",
                    "CidrIp": "0.0.0.0/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "5050",
                    "ToPort": "5050",
                    "CidrIpv6": "::/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": {
                    "Ref": "SSHLocation"
                    }
                }
                ]
            }

        },

        "loadbalancersecurity":{
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties":{
                "GroupDescription" : "Allow access from HTTP and SSH traffic",
                "GroupName": "csye6225-loadbalancer",
                "VpcId": {
                    "Ref": "VPC"
                  },
                  "Tags": [
                    {
                        "Key": "Name",
                        "Value": "csye6225-balancer"
      
                    }
                ],
                "SecurityGroupIngress": [
                {
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "0.0.0.0/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIpv6": "::/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "5050",
                    "ToPort": "5050",
                    "CidrIp": "0.0.0.0/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "5050",
                    "ToPort": "5050",
                    "CidrIpv6": "::/0"
                },

                {
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp":  "0.0.0.0/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIp": "0.0.0.0/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIpv6": "::/0"
                }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "5050",
                        "ToPort": "5050",
                        "DestinationSecurityGroupId": {
                            "Ref": "WebServerSecurityGroup"
                        }
                    }
                ]
            }
        },

        "VPCSNSendpoint":{
            "Type" : "AWS::EC2::VPCEndpoint",
            "Properties" : {
              "VpcId" :{"Ref": "VPC" },
              "ServiceName" : { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".sns" ] ] },
              "PrivateDnsEnabled": "True",
              "VpcEndpointType" : "Interface",
              "SubnetIds" : [ {"Ref": "PublicSubnet1"}, {"Ref": "PublicSubnet2"}, {"Ref": "PublicSubnet3"} ],
              "SecurityGroupIds" : [ {"Ref": "WebServerSecurityGroup"}]
            }
          },
        
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "DependsOn":["InternetGateway", "VPC"],
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },


        
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "DependsOn":"VPC",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            
                        "Fn::Join": [
                            "", [
                            {"Ref": "StackName"},
                            "-public-RouteTable"
                            ]
                        ]
                        }
                    }
                ]
            }
        },
        
        "Route": {
            "Type": "AWS::EC2::Route",
            "DependsOn":["PublicRouteTable", "InternetGateway"],
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": {"Ref":"RouteIpaddress"},
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        
        "PublicSubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn":["PublicSubnet1", "PublicRouteTable", "AttachGateway"],
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        
        "PublicSubnetRouteTableAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn":["PublicSubnet1", "PublicRouteTable", "AttachGateway"],
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        
        "PublicSubnetRouteTableAssociation3": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn":["PublicSubnet1", "PublicRouteTable", "AttachGateway"],
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet3"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },

        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "DependsOn":"VPC",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            
                        "Fn::Join": [
                            "", [
                            {"Ref": "StackName"},
                            "-private-RouteTable"
                            ]
                        ]
                        }
                    }
                ]
            }
        },


        "PrivateSubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn":["PrivateSubnet1", "PrivateRouteTable"],
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        
        "PrivateSubnetRouteTableAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn":["PrivateSubnet2", "PrivateRouteTable"],
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet2"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        
        "PrivateSubnetRouteTableAssociation3": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn":["PrivateSubnet3", "PrivateRouteTable"],
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet3"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        }
        
    },
    
    "Outputs": {
        "MyStacksRegion" : { "Value" : { "Ref" : "AWS::Region" } },
        "VPCId":{ "Value" : { "Ref" : "VPC" } },
        "InternetGatewaySId" : { "Value" : { "Ref" : "InternetGateway" } },
        "PublicRoutetable" : { "Value" : { "Ref" : "PublicRouteTable" } },
        "PrivateRoutetable" : { "Value" : { "Ref" : "PrivateRouteTable" } }

    }
}